import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import {
  FormControl,
  FormGroup,
  ReactiveFormsModule,
  Validators,
} from '@angular/forms';
import { PostService } from '../services/post.service';
import { Post } from '../models/post';
import { ActivatedRoute, RouterLink, RouterModule } from '@angular/router';

@Component({
  selector: 'app-create-post',
  standalone: true,
  imports: [CommonModule, ReactiveFormsModule, RouterModule, RouterLink],
  templateUrl: './create-post.component.html',
  styleUrl: './create-post.component.css',
})
export class CreatePostComponent implements OnInit {
  form!: FormGroup;
  blogId!: number;

  constructor(
    private postService: PostService,
    private route: ActivatedRoute
  ) {}

  ngOnInit(): void {
    this.form = new FormGroup({
      title: new FormControl('', [Validators.required]),
      content: new FormControl('', [Validators.required]),
    });
  }

  createPost(): void {
    if (this.form.invalid) {
      console.error('Form is invalid:', this.form.errors);
      return;
    }

    // Assuming these values are set correctly in the form or elsewhere
    // If you have a blogId, you can set it here or get it from the form
    this.route.queryParams.subscribe((params) => {
      this.blogId = params['blogId'];
      if (!this.blogId) {
        console.error('No blogId provided in query parameters.');
        return;
      }

      const post: Post = new Post(
        0, // postId will be generated by the backend
        this.form.value.title,
        this.form.value.content,
        new Date(), // createdDate
        new Date(), // updatedDate
        this.blogId // blogId
      );

      this.postService.createPost(post).subscribe({
        next: (response) => {
          console.log('Post created successfully:', response);
          this.form.reset();
        },
        error: (error) => {
          console.error('Error creating post:', error);
        },
      });
    });
  }
}
